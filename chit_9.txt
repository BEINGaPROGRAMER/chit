chit 9 –
use orders
db.createCollection("orderinfo")
db.orderinfo.insert([
... {
... "cust_id": 123,
... "cust_name": "abc",
... "status": "A",
... "price": 250
... },
... {
... "cust_id": 123,
... "cust_name": "abc",
... "status": "A",
... "price": 300
... },
... {
... "cust_id": 123,
... "cust_name": "abc",
... "status": "A",
... "price": 450
... },
... {
... "cust_id": 456,
... "cust_name": "xyz",
... "status": "B",
... "price": 600
... },
... {
... "cust_id": 456,
... "cust_name": "xyz",
... "status": "B",
... "price": 100
... },
... {
... "cust_id": 456,
... "cust_name": "xyz",
... "status": "A",
... "price": 900
... },
... {
... "cust_id": 789,
... "cust_name": "def",
... "status": "A",
... "price": 300
... },
... {
... "cust_id": 789,
... "cust_name": "def",
... "status": "A",
... "price": 150
... },
... {
... "cust_id": 789,
... "cust_name": "def",
... "status": "B",
... "price": 850
... },
... {
... "cust_id": 789,
... "cust_name": "def",
... "status": "B",
... "price": 1000
... }
... ])
QUERIES
• Find the total price for each customer and display in the order of total price.
db.orderinfo.aggregate(
... [
... { $group:
... {_id: "$cust_id",
... total_price:
... {$sum: "$price"}
... }
... },
... { $sort:
... {total_price: 1}
... }
... ])
• Find the distinct customer names
db.orderinfo.distinct("cust_name")
• Display the “price” of customers whose status is 'A'
db.orderinfo.find(
... { status: 'A' },
... { cust_name: 1, price: 1, _id: 0 }
... ).pretty()
• Delete the customers whose status is 'A'
db.orderinfo.remove({status: 'A'})